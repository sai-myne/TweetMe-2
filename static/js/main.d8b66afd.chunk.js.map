{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/util.js","profiles/badge.js","profiles/lookup.js","tweets/details.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","hideActions","retweeter","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d8b66afd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n  \r\n  if (csrftoken){\r\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")    \r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if(xhr.status === 403){\r\n      const detail = xhr.response.detail\r\n      if(detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf('login' === -1)) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed (callback, nextUrl) {\r\n  let endpoint = '/tweets/feed/'\r\n  if (nextUrl !== null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\",\"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n    if(username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n      endpoint = nextUrl.replace(\"http://localhost:8000/api\",\"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\n\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className\r\n      ? props.className\r\n      : \"btn btn-primary btn-sm\";\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n    \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n      \r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n      \r\n    };\r\n    const display =\r\n      action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n  \r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profile/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserLink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}{\" \"}\r\n      {hideLink === true ? (\r\n        `@${user.username}`\r\n      ) : (\r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user, hideLink } = props;\r\n  const userIdSpan = (\r\n    <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n      {user.username[0]}\r\n    </span>\r\n  );\r\n  return hideLink === true ? (\r\n    userIdSpan\r\n  ) : (\r\n    <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nexport function DisplayCount(props) {\r\n  return (\r\n    <span className={props.className}>\r\n      {numeral(props.children).format(\"0 a\")}\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\r\n\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\n\r\nimport {DisplayCount} from './util'\r\n\r\nfunction ProfileBadge(props) {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n  const handleFollowToggle = (event) => {\r\n    event.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n  return user ? (\r\n    <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p>\r\n        <UserDisplay user={user} includeFullName hideLink />\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.follower_count}</DisplayCount>{\" \"}\r\n        {user.follower_count === 1 ? \"follower\" : \"followers\"}\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following\r\n      </p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  // lookup\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n\r\n  const handleNewFollow = (actionVerb) => {\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      // console.log(response, status)\r\n      if (status === 200) {\r\n        setProfile(response);\r\n        // apiProfileDetail(username, handleBackendLookup);\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n    setProfileLoading(true);\r\n  };\r\n  return didLookup === false ? (\r\n    \"Loading...\"\r\n  ) : profile ? (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  ) : null;\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback){\r\n    backendLookup(\"GET\", `/profile/${username}/`, callback)\r\n}\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback){\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profile/${username}/follow`, callback, data)\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nimport {UserPicture, UserDisplay } from '../profiles'\r\n\r\n\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet isRetweet hideActions retweeter={props.retweeter} className={\" \"} tweet={tweet.parent} />\r\n  ) : null;\r\n}\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className\r\n    ? props.className\r\n    : \"col-10 mx-auto col-md-6\";\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n    setActionTweet(newActionTweet);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && <div className='mb-2'>\r\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter}/></span>\r\n      </div>}\r\n      <div className=\"d-flex\">\r\n        \r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>            \r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n            \r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {isDetail === true ? null : (\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={handleLink}\r\n              >\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetList } from \"./lookup\";\r\n\r\nimport {Tweet} from './details'\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  // setTweetsInit([...props.newTweets].concat(tweetsInit))\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  }\r\n  return <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n          return (\r\n            <Tweet\r\n              tweet={item}\r\n              didRetweet={handleDidRetweet}\r\n              key={`${index}-{item.id}`}\r\n              className=\"my-5 py-5 border bg-white text-dark\"\r\n            />\r\n          );\r\n        })\r\n      }\r\n      { nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load next</button>}\r\n    </React.Fragment>  \r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nimport {Tweet} from './details'\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  // setTweetsInit([...props.newTweets].concat(tweetsInit))\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if(nextUrl !== null){\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets);\r\n            setTweets(newTweets);\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n  }\r\n  return <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n          return (\r\n            <Tweet\r\n              tweet={item}\r\n              didRetweet={handleDidRetweet}\r\n              key={`${index}-{item.id}`}\r\n              className=\"my-5 py-5 border bg-white text-dark\"\r\n            />\r\n          );\r\n        })\r\n      }\r\n      { nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load next</button>}\r\n    </React.Fragment>  \r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured please try again\");\r\n    }\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { TweetsList } from \"./list\";\r\nimport {Tweet} from './details'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\nimport {TweetCreate} from './create'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent (props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert('There was an error finding your tweet.')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent } from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEl\n  );  \n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme-2')\nif(tweetsEl){\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset),\n    tweetsEl  \n  );\n}\n\nconst tweetFeedEl = document.getElementById('tweetme-2-feed')\nif(tweetFeedEl){\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset),\n    tweetFeedEl  \n  );\n}\n\nconst tweetDetailElements  = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent , container.dataset),\n    container  \n  );\n})\n\nconst userProfileBadgeElements  = document.querySelectorAll(\".tweetme-2-profile-badge\")\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset),\n    container  \n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}